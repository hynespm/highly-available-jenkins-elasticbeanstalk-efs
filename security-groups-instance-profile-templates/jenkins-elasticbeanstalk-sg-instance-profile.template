{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Cloudformation template for the security groups and instance profile used by the application Jenkins",
  "Metadata": {
    "Version": "v1.0",
    "Comment": "Created by Patrick Hynes"
  },
  "Outputs": {
    "JenkinsWorkerSG": {
      "Value": {
        "Ref": "JenkinsWorkerSG"
      },
      "Export": {
        "Name": "JenkinsWorkerSG"
      }
    },
    "JenkinsEBEFSServerSG": {
      "Value": {
        "Ref": "JenkinsEBEFSServerSG"
      },
      "Export": {
        "Name": "JenkinsEBEFSServerSG"
      }
    },
    "JenkinsEC2InstanceProfile": {
      "Value": {
        "Ref": "JenkinsEC2InstanceProfile"
      },
      "Export": {
        "Name": "JenkinsEC2-InstanceProfile"
      }
    },
    "JenkinsEC2Role": {
      "Value": {
        "Ref": "JenkinsEC2Role"
      },
      "Export": {
        "Name": "JenkinsEC2-Role"
      }
    }
  },
  "Parameters": {
    "applicationName": {
      "Type": "String",
      "Default": "jenkins-build-server"
    },
    "TagCostCenter": {
      "Type": "Number",
      "Default": "00000",
      "Description": "Cost center number to bill resource against - 7 digit number normally.",
      "MinValue": "0000000",
      "MaxValue": "9999999"
    },
    "TagOwner": {
      "Type": "String",
      "Default": "Patrick Hynes",
      "Description": "Team (or person) launching instance and/or responsible for maintenance."
    },
    "TagUseCase": {
      "Type": "String",
      "Default": "Jenkins Build Server",
      "Description": "Team (or person) launching instance and/or responsible for maintenance."
    },
    "TagApplication": {
      "Type": "String",
      "Default": "Jenkins",
      "Description": "Team (or person) launching instance and/or responsible for maintenance."
    },
    "TagEnvironment": {
      "Type": "String",
      "Description": "Defines environment for operational support model.",
      "Default": "Development",
      "AllowedValues": [
        "Production",
        "Development",
        "Test",
        "Sandbox"
      ]
    }
  },
  "Resources": {
    "JenkinsEC2Role": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ec2.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "jenkins-policy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": "s3:*",
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "JenkinsEC2InstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [
          {
            "Ref": "JenkinsEC2Role"
          }
        ]
      }
    },
     "JenkinsWorkerSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
          "Fn::ImportValue": "VPC-Id"
        },
        "GroupDescription": "Security Group for the Jenkins Workers",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Jenkins Worker SG"
          },
          {
            "Key": "Owner",
            "Value": {
              "Ref": "TagOwner"
            }
          },
          {
            "Key": "CostCenter",
            "Value": {
              "Ref": "TagCostCenter"
            }
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "TagEnvironment"
            }
          },
          {
            "Key": "Use Case",
            "Value": {
              "Ref": "TagUseCase"
            }
          },
          {
            "Key": "Application",
            "Value": {
              "Ref": "TagApplication"
            }
          }
        ]
       
      }
    },
     "JenkinsWorkerSGIngress": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties":{
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "JenkinsWorkerSG",
            "GroupId"
          ]
        },
        "GroupId": {
          "Fn::GetAtt": [
            "JenkinsEBEFSServerSG",
            "GroupId"
          ]
        }
      }
    },
    "JenkinsEBEFSServerSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
          "Fn::ImportValue": "VPC-Id"
        },
        "GroupDescription": "Security Group for the Jenkins EB VMs and EFS Mounts",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Jenkins Server EB VM SG"
          },
          {
            "Key": "Owner",
            "Value": {
              "Ref": "TagOwner"
            }
          },
          {
            "Key": "CostCenter",
            "Value": {
              "Ref": "TagCostCenter"
            }
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "TagEnvironment"
            }
          },
          {
            "Key": "Use Case",
            "Value": {
              "Ref": "TagUseCase"
            }
          },
          {
            "Key": "Application",
            "Value": {
              "Ref": "TagApplication"
            }
          }
        ],
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": "0.0.0.0/16"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/16"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "5000",
            "ToPort": "5000",
            "CidrIp": "0.0.0.0/16"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "8080",
            "ToPort": "8080",
            "CidrIp": "0.0.0.0/16"
          }
        ]
      }
    },
     "JenkinsEBEFSServerSGIngress": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties":{
        "IpProtocol": "tcp",
        "FromPort": "2049",
        "ToPort": "2049",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "JenkinsEBEFSServerSG",
            "GroupId"
          ]
        },
        "GroupId": {
          "Fn::GetAtt": [
            "JenkinsEBEFSServerSG",
            "GroupId"
          ]
        }
      }
    }
  }
}